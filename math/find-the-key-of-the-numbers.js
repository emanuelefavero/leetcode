// * Find the Key of the Numbers

/*
You are given three positive integers num1, num2, and num3.

The key of num1, num2, and num3 is defined as a four-digit number such that:

- Initially, if any number has less than four digits, it is padded with leading zeros.
- The ith digit (1 <= i <= 4) of the key is generated by taking the smallest    digit among the ith digits of num1, num2, and num3.

Return the key of the three numbers without leading zeros (if any).
*/

function generateKey(num1, num2, num3) {
  num1 = num1.toString().padStart(4, '0')
  num2 = num2.toString().padStart(4, '0')
  num3 = num3.toString().padStart(4, '0')

  let result = ''

  for (let i = 0; i < num1.length; i++) {
    result += Math.min(num1[i], num2[i], num3[i])
  }

  return parseInt(result)
}

// -------------------------
// TESTS

console.log(generateKey(1, 10, 1000)) // 0
/*
Explanation:

On padding, num1 becomes "0001", num2 becomes "0010", and num3 remains "1000".

- The 1st digit of the key is min(0, 0, 1).
- The 2nd digit of the key is min(0, 0, 0).
- The 3rd digit of the key is min(0, 1, 0).
- The 4th digit of the key is min(1, 0, 0).

Hence, the key is "0000", i.e. 0.
*/

console.log(generateKey(987, 879, 798)) // 777
